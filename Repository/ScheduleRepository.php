<?php

namespace Esolving\Eschool\RoomBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ScheduleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ScheduleRepository extends EntityRepository {

    public function findOneBySectionIdByHeadquarterIdByRoomIdByTeacherIdByLanguage($sectionId, $headquarterId, $roomId, $teacherId, $language) {
        $qb = $this->createQueryBuilder('schedule');
        $qb->addSelect('room', 'room_roomType', 'room_roomType_languages', 'room_sectionType', 'room_headquarterType', 'teacher', 'user')
                ->join('schedule.room', 'room')
                ->join('room.roomType', 'room_roomType')
                ->join('room_roomType.languages', 'room_roomType_languages')
                ->join('room.sectionType', 'room_sectionType')
                ->join('room.headquarterType', 'room_headquarterType')
                ->join('schedule.teacher', 'teacher')
                ->join('teacher.user', 'user')
                ->where('room_roomType_languages.language = :language')
                ->andWhere('room_sectionType.id = :sectionId')
                ->andWhere('room_headquarterType.id = :headquarterId')
                ->andWhere('room.id = :roomId')
                ->andWhere('teacher.id = :teacherId')
                ->setParameter('language', $language)
                ->setParameter('sectionId', $sectionId)
                ->setParameter('headquarterId', $headquarterId)
                ->setParameter('roomId', $roomId)
                ->setParameter('teacherId', $teacherId);
        $q = $qb->getQuery();
        return $q->getOneOrNullResult();
    }

    public function findAlldBySectionIdByHeadquarterIdByLanguage($section_id, $headquarter_id, $language) {
        $qb = $this->createQueryBuilder('schedule');
        $qb->addSelect('room', 'room_roomType', 'room_roomType_languages', 'room_sectionType', 'room_headquarterType', 'teacher', 'user')
                ->join('schedule.room', 'room')
                ->join('room.roomType', 'room_roomType')
                ->join('room_roomType.languages', 'room_roomType_languages')
                ->join('room.sectionType', 'room_sectionType')
                ->join('room.headquarterType', 'room_headquarterType')
                ->join('schedule.teacher', 'teacher')
                ->join('teacher.user', 'user')
                ->Where('room_roomType_languages.language = :language')
                ->andWhere('room_sectionType.id = :section_id')
                ->andWhere('room_headquarterType.id = :headquarter_id')
                ->setParameter('language', $language)
                ->setParameter('section_id', $section_id)
                ->setParameter('headquarter_id', $headquarter_id);
        $q = $qb->getQuery();
        return $q->getResult();
    }

}
